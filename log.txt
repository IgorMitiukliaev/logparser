[2023-Nov-29 09:39:18.199693] <NOTE>  NSQL: select /*+ opt_param('_optimizer_connect_by_cost_based', 'true')*/ NVL(wltpfld.t_TpFieldID, ?) "NVL", NVL(wltpfld.t_Type, ?) "NVL_1", NVL(wltpfld.t_Size, ?) "NVL_2", NVL(wltpfld.t_Name, ?) "NVL_3", NVL(wltpfld.t_LenEdit, ?) "NVL_4", NVL(wltpfld.t_NumLines, ?) "NVL_5", wlmesfld.t_BlockFlag T_BLOCKFLAG, wlmesfld.t_BlockName T_BLOCKNAME, wlmesfld.t_MandatoryFlag T_MANDATORYFLAG, wlmesfld.t_FieldID T_FIELDID, wlmesfld.t_Master T_MASTER, wlmesfld.t_TpFieldID T_TPFIELDID, wlmesfld.t_BlockNumQnt T_BLOCKNUMQNT, wlmesfld.t_BlockRadioFlag T_BLOCKRADIOFLAG from dwlmesfld_dbt wlmesfld, dwltpfld_dbt wltpfld where wltpfld.t_TpFieldID(+)=wlmesfld.t_TpFieldID start with wlmesfld.t_RlsFormID=? AND wlmesfld.t_Master=? connect by wlmesfld.t_RlsFormID=? AND wlmesfld.t_Master=prior wlmesfld.t_FieldID order siblings by wlmesfld.t_Master, wlmesfld.t_GroupIndex
[2023-Nov-29 09:39:18.212685] <NOTE>  PgConverterDuration: 12808900 ns
[2023-Nov-29 09:39:18.212685] <NOTE>  PHSQL: WITH RECURSIVE prior(wltpfld_T_TPFIELDID, wltpfld_T_TPID, wltpfld_T_NAME, wltpfld_T_DESCRIPTION, wltpfld_T_TYPE, wltpfld_T_SIZE, wltpfld_T_LENEDIT, wltpfld_T_NUMPOINT, wltpfld_T_NUMLINES, wltpfld_T_STATE, wltpfld_T_BANKDATE, wltpfld_T_SYSDATE, wltpfld_T_SYSTIME, wltpfld_T_USERID, wlmesfld_T_FIELDID, wlmesfld_T_TPFIELDID, wlmesfld_T_RLSFORMID, wlmesfld_T_MASTER, wlmesfld_T_GROUPINDEX, wlmesfld_T_MANDATORYFLAG, wlmesfld_T_BLOCKFLAG, wlmesfld_T_BLOCKNUMQNT, wlmesfld_T_DIRECTORYID, wlmesfld_T_BLOCKNAME, wlmesfld_T_DESCRIPTION, wlmesfld_T_STATE, wlmesfld_T_BANKDATE, wlmesfld_T_SYSDATE, wlmesfld_T_SYSTIME, wlmesfld_T_USERID, wlmesfld_T_BLOCKRADIOFLAG, wlmesfld_T_BLOCKONEDIT) AS
(SELECT ARRAY[glob_func.to_recursive_type( wlmesfld.t_Master)] as siblings_hierarchy_var_0, ARRAY[glob_func.to_recursive_type( wlmesfld.t_GroupIndex)] as siblings_hierarchy_var_1, wltpfld.*, wlmesfld.*
from (  dwltpfld_dbt wltpfld right outer join  dwlmesfld_dbt wlmesfld on wltpfld.t_TpFieldID=wlmesfld.t_TpFieldID)
WHERE wlmesfld.t_RlsFormID=??6 AND wlmesfld.t_Master=??7 
UNION ALL
select   prior.siblings_hierarchy_var_0 || glob_func.to_recursive_type( wlmesfld.t_Master), prior.siblings_hierarchy_var_1 || glob_func.to_recursive_type( wlmesfld.t_GroupIndex),   wltpfld.*,  wlmesfld.* from ( (  dwltpfld_dbt wltpfld right outer join  dwlmesfld_dbt wlmesfld on wltpfld.t_TpFieldID=wlmesfld.t_TpFieldID) inner join  prior on wlmesfld.t_Master=prior.wlmesfld_t_FieldID) WHERE wlmesfld.t_RlsFormID=??8 AND true 
)select   COALESCE(wltpfld_t_TpFieldID, ??0) as "NVL",  COALESCE(wltpfld_t_Type, ??1) as "NVL_1",  COALESCE(wltpfld_t_Size, ??2) as "NVL_2",  COALESCE(wltpfld_t_Name, ??3) as "NVL_3",  COALESCE(wltpfld_t_LenEdit, ??4) as "NVL_4",  COALESCE(wltpfld_t_NumLines, ??5) as "NVL_5",  wlmesfld_t_BlockFlag as wlmesfld_T_BLOCKFLAG,  wlmesfld_t_BlockName as wlmesfld_T_BLOCKNAME,  wlmesfld_t_MandatoryFlag as wlmesfld_T_MANDATORYFLAG,  wlmesfld_t_FieldID as wlmesfld_T_FIELDID,  wlmesfld_t_Master as wlmesfld_T_MASTER,  wlmesfld_t_TpFieldID as wlmesfld_T_TPFIELDID,  wlmesfld_t_BlockNumQnt as wlmesfld_T_BLOCKNUMQNT,  wlmesfld_t_BlockRadioFlag as wlmesfld_T_BLOCKRADIOFLAG from prior  where true order by siblings_hierarchy_var_0  , siblings_hierarchy_var_1   ;
[2023-Nov-29 09:39:18.216683] <NOTE>  bind map: 1 -> 7; 2 -> 8; 3 -> 9; 4 -> 1; 5 -> 2; 6 -> 3; 7 -> 4; 8 -> 5; 9 -> 6; 
[2023-Nov-29 09:39:18.216683] <NOTE>  SQL: WITH RECURSIVE prior(wltpfld_T_TPFIELDID, wltpfld_T_TPID, wltpfld_T_NAME, wltpfld_T_DESCRIPTION, wltpfld_T_TYPE, wltpfld_T_SIZE, wltpfld_T_LENEDIT, wltpfld_T_NUMPOINT, wltpfld_T_NUMLINES, wltpfld_T_STATE, wltpfld_T_BANKDATE, wltpfld_T_SYSDATE, wltpfld_T_SYSTIME, wltpfld_T_USERID, wlmesfld_T_FIELDID, wlmesfld_T_TPFIELDID, wlmesfld_T_RLSFORMID, wlmesfld_T_MASTER, wlmesfld_T_GROUPINDEX, wlmesfld_T_MANDATORYFLAG, wlmesfld_T_BLOCKFLAG, wlmesfld_T_BLOCKNUMQNT, wlmesfld_T_DIRECTORYID, wlmesfld_T_BLOCKNAME, wlmesfld_T_DESCRIPTION, wlmesfld_T_STATE, wlmesfld_T_BANKDATE, wlmesfld_T_SYSDATE, wlmesfld_T_SYSTIME, wlmesfld_T_USERID, wlmesfld_T_BLOCKRADIOFLAG, wlmesfld_T_BLOCKONEDIT) AS
(SELECT ARRAY[glob_func.to_recursive_type( wlmesfld.t_Master)] as siblings_hierarchy_var_0, ARRAY[glob_func.to_recursive_type( wlmesfld.t_GroupIndex)] as siblings_hierarchy_var_1, wltpfld.*, wlmesfld.*
from (  dwltpfld_dbt wltpfld right outer join  dwlmesfld_dbt wlmesfld on wltpfld.t_TpFieldID=wlmesfld.t_TpFieldID)
WHERE wlmesfld.t_RlsFormID=? AND wlmesfld.t_Master=? 
UNION ALL
select   prior.siblings_hierarchy_var_0 || glob_func.to_recursive_type( wlmesfld.t_Master), prior.siblings_hierarchy_var_1 || glob_func.to_recursive_type( wlmesfld.t_GroupIndex),   wltpfld.*,  wlmesfld.* from ( (  dwltpfld_dbt wltpfld right outer join  dwlmesfld_dbt wlmesfld on wltpfld.t_TpFieldID=wlmesfld.t_TpFieldID) inner join  prior on wlmesfld.t_Master=prior.wlmesfld_t_FieldID) WHERE wlmesfld.t_RlsFormID=? AND true 
)select   COALESCE(wltpfld_t_TpFieldID, ?) as "NVL",  COALESCE(wltpfld_t_Type, ?) as "NVL_1",  COALESCE(wltpfld_t_Size, ?) as "NVL_2",  COALESCE(wltpfld_t_Name, ?) as "NVL_3",  COALESCE(wltpfld_t_LenEdit, ?) as "NVL_4",  COALESCE(wltpfld_t_NumLines, ?) as "NVL_5",  wlmesfld_t_BlockFlag as wlmesfld_T_BLOCKFLAG,  wlmesfld_t_BlockName as wlmesfld_T_BLOCKNAME,  wlmesfld_t_MandatoryFlag as wlmesfld_T_MANDATORYFLAG,  wlmesfld_t_FieldID as wlmesfld_T_FIELDID,  wlmesfld_t_Master as wlmesfld_T_MASTER,  wlmesfld_t_TpFieldID as wlmesfld_T_TPFIELDID,  wlmesfld_t_BlockNumQnt as wlmesfld_T_BLOCKNUMQNT,  wlmesfld_t_BlockRadioFlag as wlmesfld_T_BLOCKRADIOFLAG from prior  where true order by siblings_hierarchy_var_0  , siblings_hierarchy_var_1   ;
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 0 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 139  -  81729992
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 1 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  81729992
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 2 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 139  -  81729992
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 3 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  81729992
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 4 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  106908296
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 5 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  74
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 6 buff_size: 4 LenOrInd: 1 Ind: 0 size: 1 type: RSDPT_LPSTR = SQL_WVARCHAR - ""
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 7 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  81729992
[2023-Nov-29 09:39:18.216683] <NOTE>  to RECORD: 8 buff_size: 4 LenOrInd: 4 Ind: 0 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  82
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 0 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 139  -  139
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 1 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 2 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 139  -  139
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 3 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 4 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.216683] <NOTE>  to ODBC RECORD: 5 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.217682] <NOTE>  to ODBC RECORD: 6 buff_size: 4 LenOrInd: 1 Ind: -3 size: 1 type: RSDPT_LPSTR = SQL_WVARCHAR - ""
[2023-Nov-29 09:39:18.217682] <NOTE>  to ODBC RECORD: 7 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.217682] <NOTE>  to ODBC RECORD: 8 buff_size: 4 LenOrInd: 4 Ind: 4 size: 4 type: RSDPT_LONG = SQL_INTEGER - 0  -  0
[2023-Nov-29 09:39:18.219681] <ERROR>  Error: 
ERROR: operator does not exist: integer = timestamp without time zone;
Error while executing the query
